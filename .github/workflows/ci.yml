name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel in–progress runs for the same branch / PR – keeps CI queue short.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ──────────────────────────────────────────────────────────────────────────────
  backend:
    name: Backend – Rust checks & tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      # Cache compiled dependencies to speed-up subsequent runs
      - name: Cache cargo registry + ~/.cargo/git
        uses: Swatinem/rust-cache@v2

      - name: Rustfmt (style)
        run: cargo fmt --all -- --check

      - name: Clippy (static analysis)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Unit tests
        run: cargo test --all --all-features --locked --verbose

  # ──────────────────────────────────────────────────────────────────────────────
  frontend:
    name: Frontend – Lint, type-check & unit tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: Type-check (tsc)
        run: npm run checkTs

      - name: Run unit tests (Vitest)
        run: npm run test -- --run

      - name: Upload coverage
        if: success() && steps["Run unit tests (Vitest)"].outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: vitest-coverage
          path: client/coverage
          retention-days: 14

  # ──────────────────────────────────────────────────────────────────────────────
  e2e:
    name: E2E – Playwright
    runs-on: ubuntu-latest
    needs: frontend # only run e2e after the app builds & unit tests pass

    defaults:
      run:
        working-directory: client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload HTML report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report
          retention-days: 14